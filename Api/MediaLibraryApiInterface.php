<?php
/**
 * MediaLibraryApiInterface
 * PHP version 5.
 *
 * @category Class
 *
 * @author   OpenAPI Generator team
 *
 * @see     https://github.com/openapitools/openapi-generator
 */

/**
 * Catroweb API.
 *
 * API for the Catrobat Share Platform
 *
 * The version of the OpenAPI document: v1.0.37
 * Contact: webmaster@catrobat.org
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Api;

use OpenAPI\Server\Model\MediaFiles;

/**
 * MediaLibraryApiInterface Interface Doc Comment.
 *
 * @category Interface
 *
 * @author   OpenAPI Generator team
 *
 * @see     https://github.com/openapitools/openapi-generator
 */
interface MediaLibraryApiInterface
{
  /**
   * Operation mediaFileSearchGet.
   *
   * Search for mediafiles associated with keywords
   *
   * @param string $query_string    (required)
   * @param string $flavor          (optional)
   * @param int    $limit           (optional, default to 20)
   * @param int    $offset          (optional, default to 0)
   * @param string $package_name    In which package you want to search (for more fine tuned results) (optional)
   * @param int    $responseCode    The HTTP response code to return
   * @param array  $responseHeaders Additional HTTP headers to return with the response ()
   *
   * @return OpenAPI\Server\Model\MediaFiles
   */
  public function mediaFileSearchGet(string $query_string, string $flavor = null, int $limit = 20, int $offset = 0, string $package_name = null, &$responseCode, array &$responseHeaders);

  /**
   * Operation mediaPackagePackageNameGet.
   *
   * Get media-library asstes of a named package
   *
   * @param string $package_name    Name of the package (required)
   * @param int    $limit           (optional, default to 20)
   * @param int    $offset          (optional, default to 0)
   * @param int    $responseCode    The HTTP response code to return
   * @param array  $responseHeaders Additional HTTP headers to return with the response ()
   *
   * @return OpenAPI\Server\Model\MediaFiles
   */
  public function mediaPackagePackageNameGet(string $package_name, int $limit = 20, int $offset = 0, &$responseCode, array &$responseHeaders);
}
