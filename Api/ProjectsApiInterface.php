<?php
/**
 * ProjectsApiInterface
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Catroweb API
 *
 * API for the Catrobat Share Platform
 *
 * The version of the OpenAPI document: v1.1.1
 * Contact: webmaster@catrobat.org
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Api;

use Symfony\Component\HttpFoundation\File\UploadedFile;
use OpenAPI\Server\Model\ExtensionResponse;
use OpenAPI\Server\Model\FeaturedProjectResponse;
use OpenAPI\Server\Model\ProjectReportRequest;
use OpenAPI\Server\Model\ProjectResponse;
use OpenAPI\Server\Model\ProjectsCategory;
use OpenAPI\Server\Model\TagResponse;
use OpenAPI\Server\Model\UpdateProjectErrorResponse;
use OpenAPI\Server\Model\UpdateProjectFailureResponse;
use OpenAPI\Server\Model\UpdateProjectRequest;
use OpenAPI\Server\Model\UploadErrorResponse;

/**
 * ProjectsApiInterface Interface Doc Comment
 *
 * @category Interface
 * @package  OpenAPI\Server\Api
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */
interface ProjectsApiInterface
{

    /**
     * Sets authentication method PandaAuth
     *
     * @param string $value Value of the PandaAuth authentication method.
     *
     * @return void
     */
    public function setPandaAuth($value);

    /**
     * Operation projectIdCatrobatGet
     *
     * Download the .catrobat (=zip) file of a project
     *
     * @param  \string $id   (required)
     * @param  \array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return \UploadedFile
     */
    public function projectIdCatrobatGet(string $id, &$responseCode, array &$responseHeaders): array|UploadedFile;


    /**
     * Operation projectIdDelete
     *
     * Delete a project
     *
     * @param  \string $id   (required)
     * @param  \array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function projectIdDelete(string $id, &$responseCode, array &$responseHeaders): void;


    /**
     * Operation projectIdGet
     *
     * Get the information of a project
     *
     * @param  \string $id   (required)
     * @param  \array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return \OpenAPI\Server\Model\ProjectResponse
     */
    public function projectIdGet(string $id, &$responseCode, array &$responseHeaders): array|\OpenAPI\Server\Model\ProjectResponse;


    /**
     * Operation projectIdPut
     *
     * Update details of a project
     *
     * @param  \string $id   (required)
     * @param  \OpenAPI\Server\Model\UpdateProjectRequest $update_project_request   (required)
     * @param  \string $accept_language   (optional)
     * @param  \array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return \array
     */
    public function projectIdPut(string $id, UpdateProjectRequest $update_project_request, string $accept_language = null, &$responseCode, array &$responseHeaders): array|\array;


    /**
     * Operation projectIdRecommendationsGet
     *
     * Get recommended projects related to the specific project
     *
     * @param  \string $id   (required)
     * @param  \string $category  * &#x60;similar&#x60; - Get similar projects to the specific project  * &#x60;also_downloaded&#x60; - Get projects that users who downloaded the specific project also downloaded  * &#x60;more_from_user&#x60; - Get more projects from the owner of the specific project (required)
     * @param  \string $accept_language   (optional)
     * @param  \string $max_version  Only shows project with a smaller version number than max version.  &#x60;Warning!&#x60; Current implementation is kinda broken. To ensure correct results use the following format &#39;[0-9].[0-9]{3}&#39; (optional)
     * @param  \int $limit   (optional, default to 20)
     * @param  \int $offset   (optional, default to 0)
     * @param  \string $attributes   (optional)
     * @param  \string $flavor   (optional)
     * @param  \array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return \OpenAPI\Server\Model\ProjectResponse[]
     */
    public function projectIdRecommendationsGet(string $id, string $category, string $accept_language = null, string $max_version = null, int $limit = 20, int $offset = 0, string $attributes = null, string $flavor = null, &$responseCode, array &$responseHeaders): iterable;


    /**
     * Operation projectIdReportPost
     *
     * Report a project -- StatusCode: 501 - Not yet implemented
     *
     * @param  \string $id   (required)
     * @param  \OpenAPI\Server\Model\ProjectReportRequest $project_report_request   (required)
     * @param  \array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function projectIdReportPost(string $id, ProjectReportRequest $project_report_request, &$responseCode, array &$responseHeaders): void;


    /**
     * Operation projectsCategoriesGet
     *
     * Get default number of projects per category (Most downloaded etc.)
     *
     * @param  \string $max_version  Only shows project with a smaller version number than max version.  &#x60;Warning!&#x60; Current implementation is kinda broken. To ensure correct results use the following format &#39;[0-9].[0-9]{3}&#39; (optional)
     * @param  \string $flavor   (optional)
     * @param  \string $accept_language   (optional)
     * @param  \array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return \OpenAPI\Server\Model\ProjectsCategory[]
     */
    public function projectsCategoriesGet(string $max_version = null, string $flavor = null, string $accept_language = null, &$responseCode, array &$responseHeaders): iterable;


    /**
     * Operation projectsExtensionsGet
     *
     * Get all possible project extensions. Extensions are automatically added to projects based on their bricks.
     *
     * @param  \string $accept_language   (optional)
     * @param  \array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return \OpenAPI\Server\Model\ExtensionResponse[]
     */
    public function projectsExtensionsGet(string $accept_language = null, &$responseCode, array &$responseHeaders): iterable;


    /**
     * Operation projectsFeaturedGet
     *
     * Get the currently featured projects
     *
     * @param  \string $platform   (optional)
     * @param  \string $max_version  Only shows project with a smaller version number than max version.  &#x60;Warning!&#x60; Current implementation is kinda broken. To ensure correct results use the following format &#39;[0-9].[0-9]{3}&#39; (optional)
     * @param  \int $limit   (optional, default to 20)
     * @param  \int $offset   (optional, default to 0)
     * @param  \string $attributes   (optional)
     * @param  \string $flavor   (optional)
     * @param  \array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return \OpenAPI\Server\Model\FeaturedProjectResponse[]
     */
    public function projectsFeaturedGet(string $platform = null, string $max_version = null, int $limit = 20, int $offset = 0, string $attributes = null, string $flavor = null, &$responseCode, array &$responseHeaders): iterable;


    /**
     * Operation projectsGet
     *
     * Get projects
     *
     * @param  \string $category   (required)
     * @param  \string $accept_language   (optional)
     * @param  \string $max_version  Only shows project with a smaller version number than max version.  &#x60;Warning!&#x60; Current implementation is kinda broken. To ensure correct results use the following format &#39;[0-9].[0-9]{3}&#39; (optional)
     * @param  \int $limit   (optional, default to 20)
     * @param  \int $offset   (optional, default to 0)
     * @param  \string $attributes   (optional)
     * @param  \string $flavor   (optional)
     * @param  \array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return \OpenAPI\Server\Model\ProjectResponse[]
     */
    public function projectsGet(string $category, string $accept_language = null, string $max_version = null, int $limit = 20, int $offset = 0, string $attributes = null, string $flavor = null, &$responseCode, array &$responseHeaders): iterable;


    /**
     * Operation projectsPost
     *
     * Upload a catrobat project
     *
     * @param  \string $checksum  Checksum of the *.catrobat file (required)
     * @param  \UploadedFile $file  The *.catrobat project file (required)
     * @param  \string $accept_language   (optional)
     * @param  \string $flavor  The flavor of this project (optional)
     * @param  \bool $private  Indicates whether a program should be private (optional)
     * @param  \array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return \array
     */
    public function projectsPost(string $checksum, UploadedFile $file, string $accept_language = null, string $flavor = null, bool $private = null, &$responseCode, array &$responseHeaders): array|\array;


    /**
     * Operation projectsSearchGet
     *
     * Search for projects associated with a keywords
     *
     * @param  \string $query   (required)
     * @param  \string $max_version  Only shows project with a smaller version number than max version.  &#x60;Warning!&#x60; Current implementation is kinda broken. To ensure correct results use the following format &#39;[0-9].[0-9]{3}&#39; (optional)
     * @param  \int $limit   (optional, default to 20)
     * @param  \int $offset   (optional, default to 0)
     * @param  \string $attributes   (optional)
     * @param  \string $flavor   (optional)
     * @param  \array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return \OpenAPI\Server\Model\ProjectResponse[]
     */
    public function projectsSearchGet(string $query, string $max_version = null, int $limit = 20, int $offset = 0, string $attributes = null, string $flavor = null, &$responseCode, array &$responseHeaders): iterable;


    /**
     * Operation projectsTagsGet
     *
     * Get all possible project tags. Some Tags will only be availabe during events.
     *
     * @param  \string $accept_language   (optional)
     * @param  \array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return \OpenAPI\Server\Model\TagResponse[]
     */
    public function projectsTagsGet(string $accept_language = null, &$responseCode, array &$responseHeaders): iterable;


    /**
     * Operation projectsUserGet
     *
     * Get the projects of the logged in user
     *
     * @param  \string $max_version  Only shows project with a smaller version number than max version.  &#x60;Warning!&#x60; Current implementation is kinda broken. To ensure correct results use the following format &#39;[0-9].[0-9]{3}&#39; (optional)
     * @param  \int $limit   (optional, default to 20)
     * @param  \int $offset   (optional, default to 0)
     * @param  \string $attributes   (optional)
     * @param  \string $flavor   (optional)
     * @param  \array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return \OpenAPI\Server\Model\ProjectResponse[]
     */
    public function projectsUserGet(string $max_version = null, int $limit = 20, int $offset = 0, string $attributes = null, string $flavor = null, &$responseCode, array &$responseHeaders): iterable;


    /**
     * Operation projectsUserIdGet
     *
     * Get the public projects of a given user
     *
     * @param  \string $id   (required)
     * @param  \string $max_version  Only shows project with a smaller version number than max version.  &#x60;Warning!&#x60; Current implementation is kinda broken. To ensure correct results use the following format &#39;[0-9].[0-9]{3}&#39; (optional)
     * @param  \int $limit   (optional, default to 20)
     * @param  \int $offset   (optional, default to 0)
     * @param  \string $attributes   (optional)
     * @param  \string $flavor   (optional)
     * @param  \array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return \OpenAPI\Server\Model\ProjectResponse[]
     */
    public function projectsUserIdGet(string $id, string $max_version = null, int $limit = 20, int $offset = 0, string $attributes = null, string $flavor = null, &$responseCode, array &$responseHeaders): iterable;

}
