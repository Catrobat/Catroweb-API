<?php
/**
 * ProjectResponse
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Catroweb API
 *
 * API for the Catrobat Share Platform
 *
 * The version of the OpenAPI document: v1.1.3
 * Contact: webmaster@catrobat.org
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the ProjectResponse model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */
class ProjectResponse 
{
        /**
     * @var string|null
     * @SerializedName("id")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected ?string $id;

    /**
     * @var string|null
     * @SerializedName("name")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected ?string $name;

    /**
     * @var string|null
     * @SerializedName("author")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected ?string $author;

    /**
     * @var string|null
     * @SerializedName("description")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected ?string $description;

    /**
     * @var string|null
     * @SerializedName("version")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected ?string $version;

    /**
     * @var int|null
     * @SerializedName("views")
     * @Assert\Type("int")
     * @Type("int")
     */
    protected ?int $views;

    /**
     * @var int|null
     * @SerializedName("downloads")
     * @Assert\Type("int")
     * @Type("int")
     */
    protected ?int $downloads;

    /**
     * @var int|null
     * @SerializedName("reactions")
     * @Assert\Type("int")
     * @Type("int")
     */
    protected ?int $reactions;

    /**
     * @var int|null
     * @SerializedName("comments")
     * @Assert\Type("int")
     * @Type("int")
     */
    protected ?int $comments;

    /**
     * @var bool|null
     * @SerializedName("private")
     * @Assert\Type("bool")
     * @Type("bool")
     */
    protected ?bool $private;

    /**
     * @var string|null
     * @SerializedName("flavor")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected ?string $flavor;

    /**
     * @var string[]|null
     * @SerializedName("tags")
     * @Assert\All({
     *   @Assert\Type("string")
     * })
     * @Type("array<string>")
     */
    protected ?array $tags;

    /**
     * @var int|null
     * @SerializedName("uploaded")
     * @Assert\Type("int")
     * @Type("int")
     */
    protected ?int $uploaded;

    /**
     * @var string|null
     * @SerializedName("uploaded_string")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected ?string $uploaded_string;

    /**
     * @var string|null
     * @SerializedName("screenshot_large")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected ?string $screenshot_large;

    /**
     * @var string|null
     * @SerializedName("screenshot_small")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected ?string $screenshot_small;

    /**
     * @var string|null
     * @SerializedName("project_url")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected ?string $project_url;

    /**
     * @var string|null
     * @SerializedName("download_url")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected ?string $download_url;

    /**
     * filesize in megabytes
     *
     * @var float|null
     * @SerializedName("filesize")
     * @Assert\Type("float")
     * @Type("float")
     */
    protected ?float $filesize;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->id = $data['id'] ?? null;
        $this->name = $data['name'] ?? null;
        $this->author = $data['author'] ?? null;
        $this->description = $data['description'] ?? null;
        $this->version = $data['version'] ?? null;
        $this->views = $data['views'] ?? null;
        $this->downloads = $data['downloads'] ?? null;
        $this->reactions = $data['reactions'] ?? null;
        $this->comments = $data['comments'] ?? null;
        $this->private = $data['private'] ?? null;
        $this->flavor = $data['flavor'] ?? null;
        $this->tags = $data['tags'] ?? null;
        $this->uploaded = $data['uploaded'] ?? null;
        $this->uploaded_string = $data['uploaded_string'] ?? null;
        $this->screenshot_large = $data['screenshot_large'] ?? null;
        $this->screenshot_small = $data['screenshot_small'] ?? null;
        $this->project_url = $data['project_url'] ?? null;
        $this->download_url = $data['download_url'] ?? null;
        $this->filesize = $data['filesize'] ?? null;
    }

    /**
     * Gets id.
     *
     * @return string|null
     */
    public function getId(): ?string
    {
        return $this->id;
    }

    /**
     * Sets id.
     *
     * @param string|null $id
     *
     * @return $this
     */
    public function setId(string $id = null): self
    {
        $this->id = $id;

        return $this;
    }

    /**
     * Gets name.
     *
     * @return string|null
     */
    public function getName(): ?string
    {
        return $this->name;
    }

    /**
     * Sets name.
     *
     * @param string|null $name
     *
     * @return $this
     */
    public function setName(string $name = null): self
    {
        $this->name = $name;

        return $this;
    }

    /**
     * Gets author.
     *
     * @return string|null
     */
    public function getAuthor(): ?string
    {
        return $this->author;
    }

    /**
     * Sets author.
     *
     * @param string|null $author
     *
     * @return $this
     */
    public function setAuthor(string $author = null): self
    {
        $this->author = $author;

        return $this;
    }

    /**
     * Gets description.
     *
     * @return string|null
     */
    public function getDescription(): ?string
    {
        return $this->description;
    }

    /**
     * Sets description.
     *
     * @param string|null $description
     *
     * @return $this
     */
    public function setDescription(string $description = null): self
    {
        $this->description = $description;

        return $this;
    }

    /**
     * Gets version.
     *
     * @return string|null
     */
    public function getVersion(): ?string
    {
        return $this->version;
    }

    /**
     * Sets version.
     *
     * @param string|null $version
     *
     * @return $this
     */
    public function setVersion(string $version = null): self
    {
        $this->version = $version;

        return $this;
    }

    /**
     * Gets views.
     *
     * @return int|null
     */
    public function getViews(): ?int
    {
        return $this->views;
    }

    /**
     * Sets views.
     *
     * @param int|null $views
     *
     * @return $this
     */
    public function setViews(int $views = null): self
    {
        $this->views = $views;

        return $this;
    }

    /**
     * Gets downloads.
     *
     * @return int|null
     */
    public function getDownloads(): ?int
    {
        return $this->downloads;
    }

    /**
     * Sets downloads.
     *
     * @param int|null $downloads
     *
     * @return $this
     */
    public function setDownloads(int $downloads = null): self
    {
        $this->downloads = $downloads;

        return $this;
    }

    /**
     * Gets reactions.
     *
     * @return int|null
     */
    public function getReactions(): ?int
    {
        return $this->reactions;
    }

    /**
     * Sets reactions.
     *
     * @param int|null $reactions
     *
     * @return $this
     */
    public function setReactions(int $reactions = null): self
    {
        $this->reactions = $reactions;

        return $this;
    }

    /**
     * Gets comments.
     *
     * @return int|null
     */
    public function getComments(): ?int
    {
        return $this->comments;
    }

    /**
     * Sets comments.
     *
     * @param int|null $comments
     *
     * @return $this
     */
    public function setComments(int $comments = null): self
    {
        $this->comments = $comments;

        return $this;
    }

    /**
     * Gets private.
     *
     * @return bool|null
     */
    public function isPrivate(): ?bool
    {
        return $this->private;
    }

    /**
     * Sets private.
     *
     * @param bool|null $private
     *
     * @return $this
     */
    public function setPrivate(bool $private = null): self
    {
        $this->private = $private;

        return $this;
    }

    /**
     * Gets flavor.
     *
     * @return string|null
     */
    public function getFlavor(): ?string
    {
        return $this->flavor;
    }

    /**
     * Sets flavor.
     *
     * @param string|null $flavor
     *
     * @return $this
     */
    public function setFlavor(string $flavor = null): self
    {
        $this->flavor = $flavor;

        return $this;
    }

    /**
     * Gets tags.
     *
     * @return string[]|null
     */
    public function getTags(): ?array
    {
        return $this->tags;
    }

    /**
     * Sets tags.
     *
     * @param string[]|null $tags
     *
     * @return $this
     */
    public function setTags(array $tags = null): self
    {
        $this->tags = $tags;

        return $this;
    }

    /**
     * Gets uploaded.
     *
     * @return int|null
     */
    public function getUploaded(): ?int
    {
        return $this->uploaded;
    }

    /**
     * Sets uploaded.
     *
     * @param int|null $uploaded
     *
     * @return $this
     */
    public function setUploaded(int $uploaded = null): self
    {
        $this->uploaded = $uploaded;

        return $this;
    }

    /**
     * Gets uploaded_string.
     *
     * @return string|null
     */
    public function getUploadedString(): ?string
    {
        return $this->uploaded_string;
    }

    /**
     * Sets uploaded_string.
     *
     * @param string|null $uploaded_string
     *
     * @return $this
     */
    public function setUploadedString(string $uploaded_string = null): self
    {
        $this->uploaded_string = $uploaded_string;

        return $this;
    }

    /**
     * Gets screenshot_large.
     *
     * @return string|null
     */
    public function getScreenshotLarge(): ?string
    {
        return $this->screenshot_large;
    }

    /**
     * Sets screenshot_large.
     *
     * @param string|null $screenshot_large
     *
     * @return $this
     */
    public function setScreenshotLarge(string $screenshot_large = null): self
    {
        $this->screenshot_large = $screenshot_large;

        return $this;
    }

    /**
     * Gets screenshot_small.
     *
     * @return string|null
     */
    public function getScreenshotSmall(): ?string
    {
        return $this->screenshot_small;
    }

    /**
     * Sets screenshot_small.
     *
     * @param string|null $screenshot_small
     *
     * @return $this
     */
    public function setScreenshotSmall(string $screenshot_small = null): self
    {
        $this->screenshot_small = $screenshot_small;

        return $this;
    }

    /**
     * Gets project_url.
     *
     * @return string|null
     */
    public function getProjectUrl(): ?string
    {
        return $this->project_url;
    }

    /**
     * Sets project_url.
     *
     * @param string|null $project_url
     *
     * @return $this
     */
    public function setProjectUrl(string $project_url = null): self
    {
        $this->project_url = $project_url;

        return $this;
    }

    /**
     * Gets download_url.
     *
     * @return string|null
     */
    public function getDownloadUrl(): ?string
    {
        return $this->download_url;
    }

    /**
     * Sets download_url.
     *
     * @param string|null $download_url
     *
     * @return $this
     */
    public function setDownloadUrl(string $download_url = null): self
    {
        $this->download_url = $download_url;

        return $this;
    }

    /**
     * Gets filesize.
     *
     * @return float|null
     */
    public function getFilesize(): ?float
    {
        return $this->filesize;
    }

    /**
     * Sets filesize.
     *
     * @param float|null $filesize  filesize in megabytes
     *
     * @return $this
     */
    public function setFilesize(float $filesize = null): self
    {
        $this->filesize = $filesize;

        return $this;
    }
}


