openapi: 3.0.2
info:
  title: Catroweb API
  description: API for the Catrobat Share Platform
  version: "v1.0.10"
  termsOfService: 'http://example.com/terms/'
  contact:
    name: Catrobat
    url: 'https://share.catrob.at'
    email: webmaster@catrobat.org
servers:
  - url: 'https://share.catrob.at/api'
    description: Main production server
  - url: 'https://web-test.catrob.at/api'
    description: WEB test server (might be unstabe)
  - url: 'https://catblocks.test.catrob.at'
    description: Catblocks test server
  - url: 'https://android.test.catrob.at'
    description: Android test server
  - url: 'http://localhost'
    description: Local test server (postman help)
tags:
  - name: Authentication
    description: Everything related to authenticating to our project
  - name: User
    description: Everything related to users
  - name: Projects
    description: Everything related to projects
  - name: Media Library
    description: Everything related to the media library
paths:
  /authenticate:
    get:
      security:
        - pandaAuth: []
      tags:
        - Authentication
      summary: Checking token
      description: Endpoint giving information if a given token is valid or not
      responses:
        200:
          description: OK - Sent token is valid for the given username
          headers:
            X-CAPI-RENEW:
              description: If set, given token will be the new Bearer token for the user
              allowEmptyValue: true
              schema:
                type: string
                example: xxxxx.yyyyy.zzzzz
        401:
          $ref: '#/components/responses/UnauthorizedError'
    delete:
      security:
        - pandaAuth: []
      tags:
        - Authentication
      summary: Logout user
      description: Endpoint allowing to log out user
      responses:
        204:
          description: Logout successful
        401:
          $ref: '#/components/responses/UnauthorizedError'
    post:
      security:
        - pandaAuth: []
      tags:
        - Authentication
      summary: Login a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
      responses:
        201:
          description: User has bin logged in successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JWTTokenResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        422: 
          description: NOT OK - Unable to process entity
  /user:
    parameters:
      - $ref: '#/components/parameters/Locale'
    post:
      security:
        - pandaAuth: []
      tags:
        - User
      summary: Register a user
      description: >-
        Register a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Register'
      responses:
        200:
          description: OK - User registerd
        400:
          $ref: '#/components/responses/BadRequest'
        422:
          description: NOT OK - Unable to process entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIValidationResponse'
  /media/package/{packageName}:
    get:
      tags:
        - Media Library
      summary: Get media-library asstes of a named package
      parameters:
        - in: path
          name: packageName
          schema:
            type: string
            example: looks
          required: true
          description: Name of the package
      responses:
        200:
          description: Valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Packages'
        400:
          $ref: '#/components/responses/BadRequest'
        404:
          description: Package name not found

  /projects:
    parameters:
      - $ref: '#/components/parameters/Locale'
    get:
      tags:
        - Projects
      summary: Get projects
      parameters:
        - $ref: '#/components/parameters/ProjectType'
        - $ref: '#/components/parameters/MaxVersion'
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/Flavor'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Projects'
        400:
          $ref: '#/components/responses/BadRequest'
    post:
      security:
        - pandaAuth: []
      tags:
        - Projects
      summary: Upload a catrobat program
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Upload'
      responses:
        201:
          description: Project created
          headers:
            X-CAPI-RENEW:
              description: If set, given token will be the new Bearer token for the user
              allowEmptyValue: true
              schema:
                type: string
                example: xxxxx.yyyyy.zzzzz
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        422:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadError'
  /projects/featured:
    get:
      tags:
        - Projects
      summary: Get the currently featured projects
      parameters:
        - name: platform
          in: query
          schema:
            type: string
            description: 'Indication what platform should be used (iOs, android)'
            enum:
              - android
              - iOS
        - $ref: '#/components/parameters/MaxVersion'
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/Flavor'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeaturedProjects'
        400:
          $ref: '#/components/responses/BadRequest'
  /projects/search:
    get:
      tags:
        - Projects
      summary: Search for programs associated with a keywords
      parameters:
        - name: queryString
          in: query
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/MaxVersion'
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/Flavor'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Projects'
        400:
          $ref: '#/components/responses/BadRequest'
  /projects/user/:
    get:
      security:
        - pandaAuth: []
      tags:
        - Projects
      summary: >-
        Get the projects of the logged in user
      parameters:
        - $ref: '#/components/parameters/MaxVersion'
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/Flavor'
      responses:
        200:
          description: Valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Projects'
          headers:
            X-CAPI-RENEW:
              description: If set, given token will be the new Bearer token for the user
              allowEmptyValue: true
              schema:
                type: string
                example: xxxxx.yyyyy.zzzzz
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/UnauthorizedError'
  '/projects/user/{userId}':
    get:
      tags:
        - Projects
      summary: >-
        Get the public projects of a given user
      parameters:
        - in: path
          name: userId
          schema:
            type: string
            example: 1234abcd-12ab-12ab-12ab-123456abcdef
          required: true
          description: UUID/ID of any given user
        - $ref: '#/components/parameters/MaxVersion'
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/Flavor'
      responses:
        200:
          description: Valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Projects'
        400:
          $ref: '#/components/responses/BadRequest'
        404:
          description: User does not exist
  /project/{project_id}:
    get:
      tags:
        - Projects
      summary: Get the information of a project
      parameters:
        - in: path
          name: project_id
          schema:
            type: string
            example: 1234abcd-12ab-12ab-12ab-123456abcdef
          required: true
          description: UUID/ID of any given project
      responses:
        200:
          description: Valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        400:
          $ref: '#/components/responses/BadRequest'
        404:
          description: Project does not exist
components:
  responses:
    UnauthorizedError:
      description: Authentication information is missing or invalid
      headers:
        WWW_Authenticate:
          description: Authentication method to be used for authentification
          schema:
            type: string
            example: Bearer
    BadRequest:
      description: NOT OK - BAD Request
  securitySchemes:
    pandaAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  parameters:
    Locale:
      in: header
      name: Accept-Language
      required: false
      schema:
        type: string
        description: ISO_639-1 or ISO_3166-1 locale of the user. Defaults internally to en
    ProjectType:
      in: query
      name: projectType
      required: true
      schema:
        type: string
        enum:
          - recent
          - random
          - mostViewed
          - mostDownloaded
          - example
          - scratch
    Flavor:
      name: flavor
      in: query
      schema:
        type: string
        description: Available flavors
        enum:
          - pocketcode
          - pocketalice
          - pocketgalaxy
          - pocketphiro
          - phirocode
          - luna
          - create@school
          - embroidery
          - arduino
    MaxVersion:
      name: maxVersion
      in: query
      schema:
        $ref: '#/components/schemas/MaxVersion'
    Limit:
      name: limit
      in: query
      schema:
        $ref: '#/components/schemas/Limit'
    Offset:
      name: offset
      in: query
      schema:
        $ref: '#/components/schemas/Offset'
  schemas:
    MaxVersion:
      type: string
      description: Only shows project with a smaller version number than max version
      example: '0.999'
      pattern: '[0-9]\.[0-9]{3}'
    Limit:
      type: integer
      minimum: 0
      description: How many projects should be shown at maximum
      default: 20
      example: 3
    Offset:
      type: integer
      minimum: 0
      description: How many projects should be skipped
      default: 0
      example: 2
    JWTToken:
      type: string
      example: xxxxx.yyyyy.zzzzz
    Upload:
      type: object
      properties:
        checksum:
          type: string
          example: asd
          description: Checksum of the *.catrobat file
        file:
          type: string
          format: binary
          description: '*.catrobat file'
        flavor:
          type: string
          description: Available flavors
          enum:
            - pocketcode
            - pocketalice
            - pocketgalaxy
            - pocketphiro
            - phirocode
            - luna
            - create@school
            - embroidery
            - arduino
          example: pocketcode
        tags:
          $ref: '#/components/schemas/Tags'
    UploadError:
      type: object
      properties:
        error:
          type: string
          enum:
            - Checksum invalid
            - ZIP invalid
            - XML invalid
            - Flavor invalid
    APIValidationResponse:
      type: object
      properties:
        email:
          type: string
          example:
            - EMail not valid
            - EMail already in use!
        username:
          type: string
          example:
            - Username too short!
            - Username already in use!
        password:
          type: string
          example:
            - Password too short
            - Password contains invalid chars
    Register:
      type: object
      properties:
        dry-run:
          type: boolean
          default: false
          description: >-
            Indicates wether sent user should be verified or registerd.
        email:
          type: string
          format: email
          example: test@test.lan
          description: EMail of the user.
        username:
          $ref: '#/components/schemas/Username'
        password:
          $ref: '#/components/schemas/Password'
    Login:
      type: object
      properties:
        username:
          $ref: '#/components/schemas/Username'
        password:
          $ref: '#/components/schemas/Password'
    JWTTokenResponse:
      type: object
      properties:
        token:
          $ref: '#/components/schemas/JWTToken'
    Packages:
      type: array
      items:
        $ref: '#/components/schemas/Package'
    Package:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: luna_sinde_2
        flavor:
          type: string
          description: Available flavors
          enum:
            - pocketcode
            - pocketalice
            - pocketgalaxy
            - pocketphiro
            - phirocode
            - luna
            - create@school
            - embroidery
            - arduino
          example: pocketcode
        package:
          type: string
          example: Looks
        category:
          type: string
          example: Luna&Cat
        author:
          type: string
          example: CatrowebAdmin
        extension:
          type: string
          example: png
        download_url:
          type: string
          example: 'https://share.catrob.at/pocketcode/download-media/983.png'
    FeaturedProjects:
      type: array
      items:
        $ref: '#/components/schemas/FeaturedProject'
    FeaturedProject:
      type: object
      properties:
        id:
          type: string
          example: 1234abcd-12ab-12ab-12ab-123456abcdef
        name:
          type: string
          example: My example of a Program
        author:
          type: string
          example: Admin
        featured_image:
          type: string
          example: 'https://share.catrob.at/resources/featured/featured_999.png'
    Projects:
      type: array
      items:
        $ref: '#/components/schemas/Project'
    Project:
      type: object
      properties:
        id:
          type: string
          example: 1234abcd-12ab-12ab-12ab-123456abcdef
        name:
          type: string
          example: My example of a Program
        author:
          type: string
          example: Admin
        description:
          type: string
          example: My very cool program!
        version:
          type: string
          example: 0.9.66
        views:
          type: integer
          example: 2
        download:
          type: integer
          example: 2
        private:
          type: boolean
          example: false
        flavor:
          type: string
          description: Available flavors
          enum:
            - pocketcode
            - pocketalice
            - pocketgalaxy
            - pocketphiro
            - phirocode
            - luna
            - create@school
            - embroidery
            - arduino
          example: pocketcode
        uploaded:
          type: integer
          example: 1575562569
        uploaded_string:
          type: string
          example: 11 minutes ago
        screenshot_large:
          type: string
          example: >-
            https://share.catrob.at/resources/screenshots/screen_1234abcd-12ab-12ab-12ab-123456abcdef.png
        screenshot_small:
          type: string
          example: >-
            https://share.catrob.at/resources/thumbnails/screen_1234abcd-12ab-12ab-12ab-123456abcdef.png
        projectUrl:
          type: string
          example: >-
            https://share.catrob.at/pocketcode/project/1234abcd-12ab-12ab-12ab-123456abcdef
        downloadUrl:
          type: string
          example: >-
            https://share.catrob.at/pocketcode/download/1234abcd-12ab-12ab-12ab-123456abcdef.catrobat
        filesize:
          type: number
          example: 0.14381762458251943
          description: filesize in megabytes
    Tags:
      type: array
      minItems: 0
      maxItems: 3
      description: Available tags
      items:
        type: string
        enum:
          - Game
          - Animation
          - Story
          - Music
          - Art
          - Experimental
          - Tutorial
        example: Game
    Username:
      type: string
      minLength: 3
      maxLength: 180
      example: Testuser
      description: Name of the user
    Password:
      type: string
      format: password
      minLength: 6
      maxLength: 4096
      example: password
      description: A secure password.